name: Release (Build & Publish)

on:
  workflow_dispatch:
  release:
    types: [ published ]

jobs:
  build:
    name: Build
    if: ${{ !github.event.release.prerelease }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pipx install poetry

      - name: Install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi --no-root --without dev

      - name: Verify version
        run: |
          RELEASE_VERSION=${{ github.event.release.tag_name }}
          RELEASE_VERSION=${RELEASE_VERSION#v}
          
          PACKAGE_VERSION=$(poetry version -s)
          if [ "$RELEASE_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Version mismatch: Release version is $RELEASE_VERSION but package version is $PACKAGE_VERSION"
            exit 1
          fi

      - name: Build packages (sdist and wheel)
        run: |
          poetry build --no-interaction --no-ansi

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
